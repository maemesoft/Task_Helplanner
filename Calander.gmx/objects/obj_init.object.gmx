<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ini_open("settings.ini");

if ini_key_exists("general", "end_time") = 0
{
    ini_write_real("general", "end_time", 2)
}

end_time = ini_read_real("general", "end_time", 2)

ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open(working_directory + "data\main.ini")

if (ini_section_exists("book_1") = 1) book=1;
else book=0;

for( p=1 ; p&lt;7 ; p+=1 )
{
    if (ini_key_exists("book_" + string(book), "page" + string(p)) = 1)
    {
        
    }
}
    

ini_close()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if device_mouse_check_button_released(0, mb_left)
{
    ini_open(working_directory + "data\main.ini")
    
    for( p=1 ; p&lt;7 ; p+=1 )
    {
        if (ini_key_exists("book_" + string(book), "page" + string(p)) = 1)
        { 
            if (mouse_x &gt;= 56 &amp;&amp; mouse_x &lt;= room_width &amp;&amp; mouse_y &gt;= 182 + p*58 -2*p &amp;&amp; mouse_y &lt;= 182 + (p+1)*58 -2*p)
            {
                cur_m = get_string_async("현재 목표의 양을 수정합니다",  ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_cur", "0")) 
            }
        }
    }
    
    ini_close();
}

if device_mouse_check_button_released(0, mb_right)
{
    ini_open(working_directory + "data\main.ini")
    
    for( p=1 ; p&lt;7 ; p+=1 )
    {
        if (ini_key_exists("book_" + string(book), "page" + string(p)) = 1)
        { 
            if (mouse_x &gt;= 56 &amp;&amp; mouse_x &lt;= room_width &amp;&amp; mouse_y &gt;= 182 + p*58 -2*p &amp;&amp; mouse_y &lt;= 182 + (p+1)*58 -2*p)
            {
                ans = show_question("목표를 삭제하시겠습니까?")
                if ans=1
                {
                    ini_section_delete(ini_read_string("book_" + string(book), "page" + string(p), ""))
                    ini_key_delete("book_" + string(book), "page" + string(p))
                }
            }
        }
    }
    
    ini_close();
}
/*
ini_open(working_directory + "data\main.ini")

for( p=1 ; p&lt;7 ; p+=1 )
{
    if (ini_key_exists("book_" + string(book), "page" + string(p)) = 1)
    { 
        if (mouse_x &gt;= 56 &amp;&amp; mouse_x &lt;= room_width &amp;&amp; mouse_y &gt;= 182 + p*58 -2*p &amp;&amp; mouse_y &lt;= 182 + (p+1)*58 -2*p)
        {
            ans = show_question("목표를 삭제하시겠습니까?")
            if ans=1
            {
                ini_section_delete(ini_read_string("book_" + string(book), "page" + string(p), ""))
                ini_key_delete("book_" + string(book), "page" + string(p))
            }
        }
    }
}

ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d = ds_map_find_value(async_load, "id");
 if i_d == cur_m
    {
    if ds_map_find_value(async_load, "status")
       {
       if ds_map_find_value(async_load, "result") != ""
          {
            ini_open(working_directory + "data\main.ini")
            ini_write_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_cur", ds_map_find_value(async_load, "result"))
            
            show_message(ds_map_find_value(async_load, "result"))
            show_message(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_cur", ds_map_find_value(async_load, "result")))
            ini_close();
          }
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_ui)
draw_text(0, 600, "(" + string(mouse_x) + "," + string(mouse_y) + ")" )

// 초기설정



// 맨 윗바

draw_line(0, 48, 360, 48)

draw_line(360/2, 60, 360/2, 200)

draw_text(69, 76, "성취율")
draw_text(241, 76, "공부 시간")

if (current_hour &gt;= end_time) hour = real("23") - current_hour + end_time;
else hour = end_time - current_hour - 1;
if (real(hour) &lt; 10) hour = string("0" + string(hour));


minute = real("59") - current_minute
if (real(minute) &lt; 10) minute = string("0" + string(minute));
second = real("59") - current_second
if (real(second) &lt; 10) second = string("0" + string(second));
draw_text(116, 209, "남은시간 : " + string(hour) + ":" + string(minute) + ":" + string(second));

// 남은시간 등등

draw_line(0, 240, 360, 240)

// 메인

draw_line(0, 577, 360, 577)

if book &gt; 0
{
    ini_open(working_directory + "data\main.ini")

    draw_set_font(font_addrom)
    
    for( p=1 ; p&lt;7 ; p+=1 )
    {
        if (ini_key_exists("book_" + string(book), "page" + string(p)) = 1)
        {
            draw_text(56, 194 + p*58 -2*p, ini_read_string("book_" + string(book), "page" + string(p), ""))
            
            //
            
            span = date_day_span(date_create_datetime(
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_start_year", "")),
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_start_mon", "")),
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_start_day", "")), 
            current_hour, current_minute, current_second), date_create_datetime(
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_end_year", "")),
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_end_mon", "")),
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_end_day", "")), 
            current_hour, current_minute, current_second))
            
            date_cur = date_day_span(date_create_datetime(
            current_year,
            current_month,
            current_day, 
            current_hour, current_minute, current_second), date_create_datetime(
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_end_year", "")),
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_end_mon", "")),
            real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "date_end_day", "")), 
            current_hour, current_minute, current_second))
            
            if span &gt;= date_cur
            {
            draw_set_alpha(0.2)
            draw_rectangle_colour(0, 182 + p*58 -2*p, 360*(1-((date_cur)/span)), 182 + p*58 -2*p + (182 + (p+1)*58 -2*p - (182 + p*58 -2*p))/2, c_blue, c_blue, c_blue, c_blue, 0)
            draw_set_alpha(0.1)
            draw_rectangle_colour(0, 182 + p*58 -2*p, 360*(1-((date_cur-1)/span)), 182 + p*58 -2*p + (182 + (p+1)*58 -2*p - (182 + p*58 -2*p))/2, c_blue, c_blue, c_blue, c_blue, 0)            
            
            mot = real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_max", "")) - real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_min", "0"))
            cur = real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_cur", "")) - real(ini_read_string(ini_read_string("book_" + string(book), "page" + string(p), ""), "value_min", "0"))
            
            draw_set_alpha(0.2)
            draw_rectangle_colour(0, 182 + p*58 -2*p + (182 + (p+1)*58 -2*p - (182 + p*58 -2*p))/2, 360*real(cur)/(real(mot)), 182 + (p+1)*58 -2*p, c_green, c_green, c_green, c_green, 0)
            draw_set_alpha(0.1)
            draw_rectangle_colour(0, 182 + p*58 -2*p + (182 + (p+1)*58 -2*p - (182 + p*58 -2*p))/2, 360*(real(cur)+1)/(real(mot)), 182 + (p+1)*58 -2*p, c_green, c_green, c_green, c_green, 0)
            }
            
            draw_set_alpha(1)
        }
    }
    

ini_close()
}

// 아래바
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
